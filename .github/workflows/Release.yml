name: Release

on:
  workflow_dispatch:

env:
  GITHUB_ACTIONS: true
  DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      DATE: ${{ steps.get_date.outputs.DATE }}
    steps:
      - name: Get current date
        id: get_date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

  windows:
    strategy:
      matrix:
        python-version: ["3.13"]

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          version: 2.11.1
          prerelease: false
          enable-pep582: false
          allow-python-prereleases: false
          update-python: true

      - name: Check Python version
        run: |
          python --version


      - name: vulkansdk
        run: |
          Invoke-WebRequest -Uri https://github.com/Tohrusky/realcugan-ncnn-vulkan-build-macOS/releases/download/v0.0.1/VulkanSDK-1.2.162.1-Installer.exe -OutFile VulkanSDK-1.2.162.1-Installer.exe
          7z x -aoa ./VulkanSDK-1.2.162.1-Installer.exe -oVulkanSDK
          Remove-Item .\VulkanSDK\Demos, .\VulkanSDK\Samples, .\VulkanSDK\Third-Party, .\VulkanSDK\Tools, .\VulkanSDK\Tools32, .\VulkanSDK\Bin32, .\VulkanSDK\Lib32 -Recurse

      - name: Build
        run: |
          $env:VULKAN_SDK="$(pwd)\VulkanSDK"
          $env:CMAKE_FLAGS="-DPY_VERSION=${{ matrix.python-version }}"
          cd src
          mkdir build && cd build
          cmake -A x64 -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -DCMAKE_CXX_FLAGS="-frtti -fexceptions" ..
          cmake --build . --config Release -j 4

      - name: pre build wheel
        run: |
          echo F | xcopy .\src\build\Release\upscale_ncnn_vulkan_wrapper.*.pyd .\src\upscale_ncnn_py

      - name: build python 3.13 wheel
        if: matrix.python-version == '3.13'
        run: pdm build --no-sdist --config-setting="--python-tag=cp313" --config-setting="--plat-name=win_amd64"

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          path: dist
          name: windows-${{ matrix.python-version }}
  
  linux:
    strategy:
      matrix:
        python-version: ["3.13"]

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libvulkan-dev glslang-dev glslang-tools libomp5
      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          version: 2.11.1
          prerelease: false
          enable-pep582: false
          allow-python-prereleases: false
          update-python: true

      - name: Check Python version
        run: |
          python --version


      - name: build
        
        run: |
          cd src
          mkdir build && cd build
          cmake ../
          cmake --build . -j 4

      - name: pre build wheel
        run: |
          cp src/build/upscale_ncnn_vulkan_wrapper.*.so src/upscale_ncnn_py


      - name: build python 3.13 wheel
        if: matrix.python-version == '3.13'
        run: pdm build --no-sdist --config-setting="--python-tag=cp312" --config-setting="--plat-name=manylinux1_x86_64"

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          path: dist
          name: linux-${{ matrix.python-version }}
          
  Release:
    needs: [setup, windows, linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: asset

      - name: dist
        run: |
          mkdir dist
          cp asset/artifact/* dist
          cd dist && ls

      
      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.setup.outputs.DATE }}
          tag_name: ${{ needs.setup.outputs.DATE }}
          body: Auto Release.
          draft: false
          prerelease: false
          files: dist/*
